#N canvas 558 245 404 318 10;
#N canvas 443 106 450 300 header 0;
#X obj 3 3 cnv 18 18 18 empty empty mat.2d.voronoi 2 8 0 14 -262144
-66577 0;
#X text 215 4 by Pierre Guillot - 2016;
#X coords 0 -1 1 1 365 20 2 2 2;
#X restore 6 6 pd header;
#X obj 221 154 text define -k \$0-points;
#A set -1 1 \; 1 1 \; 1 -1 \; -1 -1 \;;
#X msg 36 190 0 0;
#X obj 221 182 text define \$0-result;
#X obj 36 215 mat.2d.voronoi \$0-points \$0-result;
#X text 4 31 The abstraction computes the voronoi diagram of a set
of points. As the abstraction is used inside a matrix \, the result
is only for one point defined separately from the others. In a matricial
context \, this approach increases the number of calculus but it simplifies
the patching and the loops. The main point must be given in the left
inlet and it triggers the computation \, the others points must be
given via a text objet with its name as an argument. The result is
stored in second text object.;
#X obj 36 237 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 4 261 When the result has been computed \, the outlet triggers
a bang.;
#X connect 2 0 4 0;
#X connect 4 0 6 0;
