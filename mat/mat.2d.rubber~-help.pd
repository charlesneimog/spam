#N struct 1100-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1096-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1092-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1088-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1084-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1080-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1076-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1072-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1068-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1064-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1060-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1056-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1052-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1048-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1044-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1040-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1036-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1032-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1028-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1024-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1020-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1016-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1012-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1008-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N struct 1004-t-scope float x1 float y1 float x2 float y2 float c1
float c2;
#N canvas 719 23 553 809 10;
#N canvas 0 22 223 200 \$0-scope 0;
#X scalar 1100-t-scope 0.6 -0.6 1 -1 999 0 \;;
#X scalar 1096-t-scope 0.2 -0.6 0.6 -1 999 0 \;;
#X scalar 1092-t-scope -0.2 -0.6 0.2 -1 999 0 \;;
#X scalar 1088-t-scope -0.6 -0.6 -0.2 -1 999 0 \;;
#X scalar 1084-t-scope -1 -0.6 -0.6 -1 999 0 \;;
#X scalar 1080-t-scope 0.6 -0.2 1 -0.6 999 0 \;;
#X scalar 1076-t-scope 0.2 -0.2 0.6 -0.6 999 0 \;;
#X scalar 1072-t-scope -0.2 -0.2 0.2 -0.6 999 0 \;;
#X scalar 1068-t-scope -0.6 -0.2 -0.2 -0.6 999 0 \;;
#X scalar 1064-t-scope -1 -0.2 -0.6 -0.6 999 0 \;;
#X scalar 1060-t-scope 0.6 0.2 1 -0.2 999 0 \;;
#X scalar 1056-t-scope 0.2 0.2 0.6 -0.2 999 0 \;;
#X scalar 1052-t-scope -0.2 0.2 0.2 -0.2 999 0 \;;
#X scalar 1048-t-scope -0.6 0.2 -0.2 -0.2 999 0 \;;
#X scalar 1044-t-scope -1 0.2 -0.6 -0.2 999 0 \;;
#X scalar 1040-t-scope 0.6 0.6 1 0.2 999 0 \;;
#X scalar 1036-t-scope 0.2 0.6 0.6 0.2 999 0 \;;
#X scalar 1032-t-scope -0.2 0.6 0.2 0.2 999 0 \;;
#X scalar 1028-t-scope -0.6 0.6 -0.2 0.2 999 0 \;;
#X scalar 1024-t-scope -1 0.6 -0.6 0.2 999 0 \;;
#X scalar 1020-t-scope 0.6 1 1 0.6 999 0 \;;
#X scalar 1016-t-scope 0.2 1 0.6 0.6 999 0 \;;
#X scalar 1012-t-scope -0.2 1 0.2 0.6 999 0 \;;
#X scalar 1008-t-scope -0.6 1 -0.2 0.6 999 0 \;;
#X scalar 1004-t-scope -1 1 -0.6 0.6 999 0 \;;
#X coords -1 1 1 -1 200 200 2 100 100;
#X restore 63 528 pd \$0-scope;
#N canvas 443 106 450 300 header 0;
#X obj 3 3 cnv 18 18 18 empty empty mat.2d.brush~ 2 8 0 14 -262144
-66577 0;
#X text 215 4 by Pierre Guillot - 2016;
#X coords 0 -1 1 1 365 20 2 2 2;
#X restore 6 6 pd header;
#X obj 14 492 spam~ 25 mat.2d.scope~ \$0-config \$0-scope, f 51;
#X obj 14 767 dac~ 1 2, f 51;
#X text 4 216 The text object must define the dimensions of the matrix.
;
#X text 4 31 The abstraction synthesizes the signals of a matrix depending
on cartesian coordinates. The weight of the signal in each cell is
computed using the distance between the encoding position and the cell
position. To allow an adaptation of the encoding to all the sizes of
matrices \, the coordinates are scaled between minus one and one. The
weight of the signal decreases with the distance and when the distance
reaches its maximum the weight is null. To sound a bit more natural
\, the weight is transposed on a cosinus scaled. By default \, the
distance is limited in order to never exceed the minimum distance between
two cells. Thus the signal can't be inside of more than five cells.
Nevertheless \, a spread factor allows to stretch the limit and to
spread the signal over a larger set of cells.;
#X obj 402 349 tgl 15 0 empty \$0-auto empty 17 7 0 10 -262144 -1 -1
1 1;
#N canvas 0 22 573 343 trajectory 0;
#X obj 54 191 t f f, f 15;
#X obj 54 279 pack f f, f 15;
#X obj 54 237 * 6.28319;
#X obj 141 237 * 6.28319;
#X obj 54 128 line 0;
#X obj 54 257 sin;
#X obj 141 257 sin;
#X obj 54 215 * 3;
#X obj 141 215 * 1;
#X msg 54 104 \$1 \, 1 10000;
#X obj 54 80 f 0;
#X obj 144 96 sel 1;
#X obj 54 301 outlet;
#X msg 17 104 stop;
#X obj 17 53 sel 0 1, f 13;
#X obj 144 118 f 0;
#X obj 17 25 inlet;
#X connect 0 0 7 0;
#X connect 0 1 8 0;
#X connect 1 0 12 0;
#X connect 2 0 5 0;
#X connect 3 0 6 0;
#X connect 4 0 0 0;
#X connect 4 0 11 0;
#X connect 5 0 1 0;
#X connect 6 0 1 1;
#X connect 7 0 2 0;
#X connect 8 0 3 0;
#X connect 9 0 4 0;
#X connect 10 0 9 0;
#X connect 11 0 15 0;
#X connect 11 1 10 1;
#X connect 13 0 4 0;
#X connect 14 0 13 0;
#X connect 14 1 10 0;
#X connect 15 0 10 0;
#X connect 16 0 14 0;
#X restore 402 367 pd trajectory;
#X obj 317 343 tgl 15 0 empty \$0-auto empty 17 7 0 10 -262144 -1 -1
1 1;
#N canvas 0 22 240 385 blurry 0;
#X obj 54 187 * 6.28319;
#X obj 54 128 line 0;
#X obj 54 207 sin;
#X obj 54 80 f 0;
#X obj 144 96 sel 1;
#X obj 54 321 outlet;
#X msg 17 104 stop;
#X obj 17 53 sel 0 1, f 13;
#X obj 144 118 f 0;
#X obj 17 25 inlet;
#X obj 54 229 t f f;
#X obj 54 251 *, f 5;
#X msg 54 104 \$1 \, 1 50000;
#X obj 54 273 * 6;
#X obj 54 295 clip 1 5;
#X connect 0 0 2 0;
#X connect 1 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 10 0;
#X connect 3 0 12 0;
#X connect 4 0 8 0;
#X connect 4 1 3 1;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 7 1 3 0;
#X connect 8 0 3 0;
#X connect 9 0 7 0;
#X connect 10 0 11 0;
#X connect 10 1 11 1;
#X connect 11 0 13 0;
#X connect 12 0 1 0;
#X connect 13 0 14 0;
#X connect 14 0 5 0;
#X restore 317 364 pd blurry;
#X obj 317 384 nbx 5 14 1 100 0 0 empty empty empty 0 -8 0 10 -262144
-1 -1 5 256;
#X msg 317 403 spread \$1;
#X obj 402 388 tools/mat.gnbx2;
#X text 310 310 Spread the encoding., f 10;
#X obj 343 511 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 343 531 spam.connect;
#X obj 14 268 text define -k \$0-config;
#A set mat.dim 5 5 \; mat.dec.nls 2 \; mat.dec.positions -0.75 0.75
0.75 0.75 \; mat.dec.rolloff 10 \; mat.dec.blur 0.1 \;;
#N canvas 0 22 450 300 init 0;
#X obj 13 42 loadbang;
#X msg 13 64 100;
#X obj 13 86 s \$0-gain;
#X obj 89 42 loadbang;
#X msg 89 64 1;
#X obj 89 87 s \$0-auto;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X restore 252 252 pd init;
#X obj 29 332 *~;
#X obj 14 355 *~;
#X obj 77 332 dbtorms;
#X obj 77 312 nbx 5 14 0 100 0 0 empty \$0-gain empty 0 -8 0 10 -262144
-1 -1 100 256;
#X obj 77 354 pack f 20;
#X obj 77 376 line~;
#X obj 14 399 *~, f 11;
#X obj 14 287 noise~;
#X text 175 288 Defines the abscissa and the ordinate position of encoding.
, f 17;
#X obj 29 310 osc~ 10;
#X msg 257 362 liest 0 0;
#X msg 384 485 spread \$1;
#X obj 402 440 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X msg 238 392 spread 1;
#X obj 14 458 spam~ 25 mat.2d.rubber~ \$0-config, f 51;
#X obj 14 428 spam~ 25 mat.2d.brush~ \$0-config, f 49;
#X obj 14 745 spam~ 25 mat.2d.dec.dbap~ \$0-config, f 51;
#X connect 6 0 7 0;
#X connect 7 0 12 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 12 0 32 25;
#X connect 14 0 15 0;
#X connect 18 0 19 1;
#X connect 19 0 24 0;
#X connect 20 0 22 0;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 23 0 24 1;
#X connect 24 0 33 0;
#X connect 25 0 19 0;
#X connect 27 0 18 0;
#X connect 27 0 18 1;
#X connect 28 0 33 1;
#X connect 29 0 32 25;
#X connect 30 0 29 0;
#X connect 31 0 33 1;
#X connect 32 0 2 0;
#X connect 32 0 34 0;
#X connect 32 1 2 1;
#X connect 32 1 34 1;
#X connect 32 2 2 2;
#X connect 32 2 34 2;
#X connect 32 3 2 3;
#X connect 32 3 34 3;
#X connect 32 4 2 4;
#X connect 32 4 34 4;
#X connect 32 5 2 5;
#X connect 32 5 34 5;
#X connect 32 6 2 6;
#X connect 32 6 34 6;
#X connect 32 7 2 7;
#X connect 32 7 34 7;
#X connect 32 8 2 8;
#X connect 32 8 34 8;
#X connect 32 9 2 9;
#X connect 32 9 34 9;
#X connect 32 10 2 10;
#X connect 32 10 34 10;
#X connect 32 11 2 11;
#X connect 32 11 34 11;
#X connect 32 12 2 12;
#X connect 32 12 34 12;
#X connect 32 13 2 13;
#X connect 32 13 34 13;
#X connect 32 14 2 14;
#X connect 32 14 34 14;
#X connect 32 15 2 15;
#X connect 32 15 34 15;
#X connect 32 16 2 16;
#X connect 32 16 34 16;
#X connect 32 17 2 17;
#X connect 32 17 34 17;
#X connect 32 18 2 18;
#X connect 32 18 34 18;
#X connect 32 19 2 19;
#X connect 32 19 34 19;
#X connect 32 20 2 20;
#X connect 32 20 34 20;
#X connect 32 21 2 21;
#X connect 32 21 34 21;
#X connect 32 22 2 22;
#X connect 32 22 34 22;
#X connect 32 23 2 23;
#X connect 32 23 34 23;
#X connect 32 24 2 24;
#X connect 32 24 34 24;
#X connect 33 0 32 0;
#X connect 33 1 32 1;
#X connect 33 2 32 2;
#X connect 33 3 32 3;
#X connect 33 4 32 4;
#X connect 33 5 32 5;
#X connect 33 6 32 6;
#X connect 33 7 32 7;
#X connect 33 8 32 8;
#X connect 33 9 32 9;
#X connect 33 10 32 10;
#X connect 33 11 32 11;
#X connect 33 12 32 12;
#X connect 33 13 32 13;
#X connect 33 14 32 14;
#X connect 33 15 32 15;
#X connect 33 16 32 16;
#X connect 33 17 32 17;
#X connect 33 18 32 18;
#X connect 33 19 32 19;
#X connect 33 20 32 20;
#X connect 33 21 32 21;
#X connect 33 22 32 22;
#X connect 33 23 32 23;
#X connect 33 24 32 24;
