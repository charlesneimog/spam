#N canvas 663 301 379 262 10;
#N canvas 443 106 450 300 header 0;
#X obj 3 3 cnv 18 18 18 empty empty mat.2d.rctocar 2 8 0 14 -262144
-66577 0;
#X text 215 4 by Pierre Guillot - 2016;
#X coords 0 -1 1 1 365 20 2 2 2;
#X restore 6 6 pd header;
#X obj 13 212 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 1.5 256;
#X obj 70 212 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0.5 256;
#X obj 13 188 unpack, f 10;
#X text 4 31 The abstraction transforms a row index and a column index
of a matrix (the position of an element inside a matrix) into a cartesian
position between -1 and 1 on the abscissa and ordinate axes depending
on the total number of rows and columns in the matrix.;
#X text 4 101 The first argument is the number of rows in the matrix
and the second argument is the number of column in the matrix.;
#X obj 13 166 mat.2d.rctocar 4 4;
#X obj 13 140 mat.gnbx2;
#X text 82 139 Use intergers;
#X text 11 232 abscissa;
#X text 71 232 ordinate;
#X connect 3 0 1 0;
#X connect 3 1 2 0;
#X connect 6 0 3 0;
#X connect 7 0 6 0;
